name: CI

on:
  push:
    branches: [ main, develop, feat/* ]
  pull_request:
    branches: [ main, develop ]

env:
  # Global CI environment
  NODE_ENV: test
  LOG_LEVEL: info
  LANGGRAPH_PORT: 2024
  LANGGRAPH_HOST: localhost
  
  # LangSmith configuration
  LANGCHAIN_TRACING: true
  LANGCHAIN_PROJECT: chef-chopsky-ci
  LANGCHAIN_API_KEY: ${{ secrets.LANGCHAIN_API_KEY }}
  
  # OpenAI API key for agent tests
  OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
  
  # Note: Supabase credentials are set dynamically after starting local Supabase CLI

jobs:
  # Code quality validation (fast feedback)
  code-quality:
    name: Code Quality: Lint, Tests, Build
    runs-on: ubuntu-latest
    
    steps:
    - name: Setup Node.js Environment
      uses: ./.github/actions/setup-node
      with:
        node-version: '20.x'
      
    - name: Lint code
      run: npm run lint
      
    - name: Run unit tests
      run: |
        echo "🧪 Running frontend unit tests..."
        cd frontend && npm run test:unit
        echo "🤖 Running agent unit tests..."
        cd .. && cd agent && npm run test:unit
      
    - name: Build applications
      run: npm run build
      
    - name: Upload test results
      if: always()
      uses: actions/upload-artifact@v4
      with:
        name: test-results-node20
        path: |
          frontend/coverage/
          agent/coverage/
        retention-days: 7

  # Integration and E2E tests with service orchestration
  integration-e2e:
    name: Integration & E2E Tests
    runs-on: ubuntu-latest
    needs: code-quality
    
    env:
      # Agent service environment variables (inherits global env)
      LANGGRAPH_PORT: 2024
      LANGGRAPH_HOST: localhost
    
    steps:
    - name: Setup Node.js Environment
      uses: ./.github/actions/setup-node
      with:
        node-version: '20.x'
      
    - name: Install Supabase CLI
      run: |
        echo "📦 Installing Supabase CLI..."
        npm install -g supabase@latest
        
    - name: Start Local Supabase
      run: |
        echo "🚀 Starting local Supabase (Docker-based)..."
        cd frontend && supabase start
        echo "✅ Local Supabase started successfully"
        
    - name: Extract Supabase Credentials
      run: |
        echo "🔑 Extracting Supabase credentials..."
        cd frontend
        supabase status -o env > /tmp/supabase.env
        echo "📋 Supabase credentials extracted to /tmp/supabase.env"
        
    - name: Set Environment Variables
      run: |
        echo "🔧 Setting environment variables from Supabase..."
        cd frontend
        export $(cat /tmp/supabase.env | xargs)
        echo "NEXT_PUBLIC_SUPABASE_URL=$NEXT_PUBLIC_SUPABASE_URL" >> $GITHUB_ENV
        echo "NEXT_PUBLIC_SUPABASE_PUBLISHABLE_KEY=$NEXT_PUBLIC_SUPABASE_PUBLISHABLE_KEY" >> $GITHUB_ENV
        echo "SUPABASE_SECRET_KEY=$SUPABASE_SECRET_KEY" >> $GITHUB_ENV
        echo "✅ Environment variables set"
        
    - name: Install Playwright browsers
      run: cd frontend && npx playwright install --with-deps chromium
      
    - name: Build applications
      run: npm run build
      
    - name: Start services
      run: |
        echo "🚀 Starting services for integration and E2E tests..."
        ./scripts/start-services.sh &
        echo "Services started in background"
        
    - name: Wait for services to be ready
      run: |
        echo "⏳ Waiting for services to be ready..."
        timeout 120s node scripts/health-check.js
        if [ $? -ne 0 ]; then
          echo "❌ Services failed to start within 120 seconds"
          echo "📋 Checking service status..."
          ps aux | grep -E "(next|tsx)" | grep -v grep || echo "No services found"
          exit 1
        fi
        echo "✅ All services are ready!"
        
    - name: Run integration tests
      run: |
        echo "🧪 Running frontend integration tests..."
        cd frontend && npm run test:integration
        
        echo "🤖 Running agent integration tests..."
        cd ../agent && npm run test:integration
        
    - name: Run E2E tests
      run: |
        echo "🎭 Running E2E tests..."
        cd frontend && npm run test:e2e
        
    - name: Stop services
      if: always()
      run: |
        echo "🛑 Stopping services..."
        npm run stop:services || true
        # Ensure cleanup
        pkill -f 'next dev' || true
        pkill -f 'tsx watch' || true
        
        echo "🛑 Stopping local Supabase..."
        cd frontend && supabase stop || true
        
    - name: Upload test results
      if: always()
      uses: actions/upload-artifact@v4
      with:
        name: integration-e2e-results
        path: |
          frontend/test-results/
          frontend/playwright-report/
          frontend/coverage/integration/
        retention-days: 7

  # Security and dependency check
  security:
    name: Security Audit
    runs-on: ubuntu-latest
    
    steps:
    - name: Setup Node.js Environment
      uses: ./.github/actions/setup-node
      with:
        node-version: '20.x'
      
    - name: Run security audit
      run: |
        npm audit --audit-level=moderate
        cd frontend && npm audit --audit-level=moderate
        cd ../agent && npm audit --audit-level=moderate
