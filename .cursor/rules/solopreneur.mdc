---
description: "project conventions: cross-platform React Native + React Native Web + Next.js with NativeWind + gluestack UI."
globs:
  - "**/*"
alwaysApply: true
---


# ===============================
# üìê Project Conventions
# Cross-platform baseline: React Native + React Native Web + Next.js
# Styling: NativeWind (Tailwind) + gluestack UI
# Backend: Firebase (Firestore, Auth, Functions)
# ===============================

# --- Language & Frameworks ---
- Use **TypeScript** everywhere.
- Architecture: **React Native (mobile)** + **React Native Web (web via Next.js App Router)**.
- All UI should be written as **React Native components** and shared between platforms through RNW.
- Assume **Expo (or compatible config)** for mobile builds.

# --- Styling & UI System ---
- Use **NativeWind (Tailwind)** for styling across platforms. Avoid inline styles unless absolutely necessary.
- Use **gluestack UI** for consistent, cross-platform components.
- Shared components must work in both **RN and RNW**. Do not introduce DOM-only or Node-only APIs into shared code.
- Follow **WCAG accessibility standards** (labels, roles, ARIA, a11y props).

# --- Code Quality & Structure ---
- Components must be **small, composable, and production-ready**.
- Use **platform-specific files** (`.native.tsx`, `.web.tsx`) only when divergence is unavoidable; document the reason.
- Prefer functional, declarative patterns. Always use **async/await**.
- Enforce **ESLint + Prettier** across the repo.

# --- Workflow & DX ---
- Use **feature branches** for new work; merge only stable features into `main`.
- Commit messages must follow conventional commits: `feat:`, `fix:`, `chore:`, `refactor:`, `docs:`, `test:`.
- Maintain **AI-grounding docs** in `/docs` (`architecture.md`, `product-vision.md`, `ui-guidelines.md`).

# --- Guardrails ---
- ‚ùå Do not import web-only UI libraries into shared code.
- ‚ùå Do not use CSS Modules in shared components; use **NativeWind** instead.
- ‚úÖ Default to **gluestack UI + NativeWind** for styling and components.
- ‚úÖ Web-only surfaces (e.g. marketing/admin) must live under `/app/(marketing)/` or `/components/web/`. Never import them into shared code.

# --- Delivery Mindset ---
- Always bias toward **shipping vertical slices** that can be deployed, then refined.
- Write code as if it will be shipped to **mobile and web today**.
- Prioritize **clarity and maintainability** over clever solutions.

# --- Miscellaneous ---
- Never display the contents of an .env files in a chat correspondence (except for .env.example).
- Make sure I understand what you're doing before you go off and write code.
- Always use npm or npx instead of yarn.
- When installing packages, use the latest, greatest, but well-supported versions. Make sure they're compatible with existing packages.
- Unless I give you explicit instructions to do so, do not create git commits. Instead, at the appropriate times, please suggest that I create a commmit and provide a proposed commit message.